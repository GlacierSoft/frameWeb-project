<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.glacier.frame.dao.member.MemberSecretSecurityMapper" >
  <resultMap id="BaseResultMap" type="com.glacier.frame.entity.member.MemberSecretSecurity" >
    <id column="temp_member_secret_security_secret_security_id" property="secretSecurityId" jdbcType="VARCHAR" />
    <result column="temp_member_secret_security_question_id" property="questionId" jdbcType="VARCHAR" />
    <result column="temp_member_secret_security_member_id" property="memberId" jdbcType="VARCHAR" />
    <result column="temp_member_secret_security_answer" property="answer" jdbcType="VARCHAR" />
    <result column="temp_member_secret_security_remark" property="remark" jdbcType="VARCHAR" />
    <result column="temp_member_secret_security_creater" property="creater" jdbcType="VARCHAR" />
    <result column="temp_member_secret_security_create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="temp_member_secret_security_updater" property="updater" jdbcType="VARCHAR" />
    <result column="temp_member_secret_security_update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="temp_member_secret_security_member_real_name" property="memberRealName" jdbcType="VARCHAR"/> <!-- 自定义扩展字段 -->
    <result column="temp_member_secret_security_question_des" property="questionDes" jdbcType="VARCHAR"/> <!-- 自定义扩展字段 -->
    <result column="temp_member_secret_security_creater_display" property="createrDisplay" jdbcType="VARCHAR"/> <!-- 自定义扩展字段 -->
    <result column="temp_member_secret_security_updater_display" property="updaterDisplay" jdbcType="VARCHAR"/> <!-- 自定义扩展字段 -->
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    temp_member_secret_security.secret_security_id as temp_member_secret_security_secret_security_id, 
    temp_member_secret_security.question_id as temp_member_secret_security_question_id, 
    temp_member_secret_security.member_id as temp_member_secret_security_member_id, temp_member_secret_security.answer as temp_member_secret_security_answer, 
    temp_member_secret_security.remark as temp_member_secret_security_remark, temp_member_secret_security.creater as temp_member_secret_security_creater, 
    temp_member_secret_security.create_time as temp_member_secret_security_create_time, 
    temp_member_secret_security.updater as temp_member_secret_security_updater, temp_member_secret_security.update_time as temp_member_secret_security_update_time
    <!-- 以下字段属于扩展 -->
    ,temp_member.member_real_name as temp_member_secret_security_member_real_name
    ,temp_question.question_des as temp_member_secret_security_question_des
    ,temp_creater.user_cn_name as temp_member_secret_security_creater_display
    ,temp_updater.user_cn_name as temp_member_secret_security_updater_display
  </sql>
  <sql id="Base_extend">
  	LEFT JOIN t_member temp_member ON temp_member_secret_security.member_id =  temp_member.member_id<!-- 扩展 -->
  	LEFT JOIN t_parameter_question temp_question ON temp_member_secret_security.question_id = temp_question.question_id<!-- 扩展 -->
    LEFT JOIN t_user temp_creater ON temp_member_secret_security.creater =  temp_creater.user_id<!-- 扩展 -->
    LEFT JOIN t_user temp_updater ON temp_member_secret_security.updater =  temp_updater.user_id<!-- 扩展 -->
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.glacier.frame.entity.member.MemberSecretSecurityExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_member_secret_security temp_member_secret_security
    <include refid="Base_extend"/><!-- 扩展 -->
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_member_secret_security temp_member_secret_security
    <include refid="Base_extend"/><!-- 扩展 -->
    where temp_member_secret_security.secret_security_id = #{secretSecurityId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_member_secret_security
    where secret_security_id = #{secretSecurityId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.glacier.frame.entity.member.MemberSecretSecurityExample" >
    delete temp_member_secret_security from t_member_secret_security temp_member_secret_security
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.glacier.frame.entity.member.MemberSecretSecurity" >
    insert into t_member_secret_security (secret_security_id, question_id, member_id, 
      answer, remark, creater, 
      create_time, updater, update_time
      )
    values (#{secretSecurityId,jdbcType=VARCHAR}, #{questionId,jdbcType=VARCHAR}, #{memberId,jdbcType=VARCHAR}, 
      #{answer,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{creater,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updater,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.glacier.frame.entity.member.MemberSecretSecurity" >
    insert into t_member_secret_security
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="secretSecurityId != null" >
        secret_security_id,
      </if>
      <if test="questionId != null" >
        question_id,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="answer != null" >
        answer,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updater != null" >
        updater,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="secretSecurityId != null" >
        #{secretSecurityId,jdbcType=VARCHAR},
      </if>
      <if test="questionId != null" >
        #{questionId,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.glacier.frame.entity.member.MemberSecretSecurityExample" resultType="java.lang.Integer" >
    select count(*) from t_member_secret_security temp_member_secret_security
    <include refid="Base_extend"/><!-- 扩展 -->
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_member_secret_security temp_member_secret_security
    <set >
      <if test="record.secretSecurityId != null" >
        temp_member_secret_security.secret_security_id = #{record.secretSecurityId,jdbcType=VARCHAR},
      </if>
      <if test="record.questionId != null" >
        temp_member_secret_security.question_id = #{record.questionId,jdbcType=VARCHAR},
      </if>
      <if test="record.memberId != null" >
        temp_member_secret_security.member_id = #{record.memberId,jdbcType=VARCHAR},
      </if>
      <if test="record.answer != null" >
        temp_member_secret_security.answer = #{record.answer,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        temp_member_secret_security.remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.creater != null" >
        temp_member_secret_security.creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        temp_member_secret_security.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updater != null" >
        temp_member_secret_security.updater = #{record.updater,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        temp_member_secret_security.update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_member_secret_security temp_member_secret_security
    set temp_member_secret_security.secret_security_id = #{record.secretSecurityId,jdbcType=VARCHAR},
      temp_member_secret_security.question_id = #{record.questionId,jdbcType=VARCHAR},
      temp_member_secret_security.member_id = #{record.memberId,jdbcType=VARCHAR},
      temp_member_secret_security.answer = #{record.answer,jdbcType=VARCHAR},
      temp_member_secret_security.remark = #{record.remark,jdbcType=VARCHAR},
      temp_member_secret_security.creater = #{record.creater,jdbcType=VARCHAR},
      temp_member_secret_security.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      temp_member_secret_security.updater = #{record.updater,jdbcType=VARCHAR},
      temp_member_secret_security.update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.glacier.frame.entity.member.MemberSecretSecurity" >
    update t_member_secret_security
    <set >
      <if test="questionId != null" >
        question_id = #{questionId,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        updater = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where secret_security_id = #{secretSecurityId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.glacier.frame.entity.member.MemberSecretSecurity" >
    update t_member_secret_security
    set question_id = #{questionId,jdbcType=VARCHAR},
      member_id = #{memberId,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      creater = #{creater,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      updater = #{updater,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where secret_security_id = #{secretSecurityId,jdbcType=VARCHAR}
  </update>
</mapper>