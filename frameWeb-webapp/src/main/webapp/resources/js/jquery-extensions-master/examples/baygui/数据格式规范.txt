一，左侧的列表数据，Array 类型值，数组中的每一项都是一个包含如下属性的 JSON-Object 对象；
    id:         Number/String 类型值，集装箱标识号
    boxNo:      Number/String 类型值，箱号   (箱号 xh)
    
    boxSpec:    String 类型值，箱规格 (箱型 xx)
    boxState:   String 类型值，箱态   (箱态 xt)
    boxType:    String 类型值，箱类   (箱类 xl)
    
    boxWeight:  Number/String 类型值，箱重   (箱重 zl)

    fromPort;   String 类型值，始发港 (始发港 sfg)
    toPort:     String 类型值，目的港 (目的港 mdg)

    bayCellNo:  String 类型值，该箱所在的贝位号

    示例数据如：(参见 boxes-data.json 文件)



二，右侧的贝位图模型初始化渲染数据，Array 类型值，数组中的每一项都是一个包含如下属性的 JSON-Object 对象；
    bayNo:      Number/String 类型值，贝位行(船体横切面)编号
    isEdge:     Boolean 类型值，表示该贝位行是否位于前侧边缘，前侧边缘的贝位行与下一个贝位存在间隙，即不能放置 40 尺的集装箱
    tiers:      Array 类型值，该属性表示该贝位行(船体横切面)的所有层数据，数组中的每一项都是一个包含如下属性的 JSON-Object 对象；
        tierNo: Number/String 类型值，贝位行中层的层号
        rows:   Array 类型值，贝位行中层的贝位数据，即该层含有的贝位单元格，数组中的每一项都是一个包含如下属性的 JSON-Object 对象；
            bayCellNo:  Number/String 类型值，该贝位单元格的贝位号(该属性可选)
            rowNo:      Number/String 类型值，该贝位单元格所在的列号
            disabled:   Boolean 类型值，表示该贝位单元格是否被禁用(如果被禁用则该位置不能放置集装箱)
    
    注意：
        假设某条船的内仓最大层数是5，那么层号(tierNo)列表依次为：02、04、06、08、10；
        在该船内某个贝位上的层数小于最大层数，例如3，那么该贝位的层号列表不能设置为：02、04、06，也不能设置为 06、08、10
        而是应该设置为完整的层号列表：02、04、06、08、10，同时层号小的内仓层(即 02、04)表示不存在的层，其所有单元格的 disabled 应设置为 true。
        也就是说，返回的数据当中，每一个贝位应包含完整的所有内仓层数据

    示例数据如：(参见 bays-data 文件)
